apply plugin: 'base'
apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'application'

mkdir buildDir

wrapper {
    distributionType = Wrapper.DistributionType.ALL
    gradleVersion = "4.10.2"
}

task toa_event () {
  group "FTC - Titainum Trojans"
  description "Pulls data for a single event from TOA."

  doLast {
    def eventProcessor = new ToaEventProcessor(buildDir.toString())
    eventProcessor.process("1819-FIM-Q3")
  }
}

task toa () {
  doLast {
    def toa = new ToaRestClient ()
    def matchFactory = new ToaMatchDataFactory("1819-FIM-Q3")
    def matchDataRed = matchFactory.getMatch("1819-FIM-Q3-Q007-1")
    def oprCalc = new OprCalculator(toa.getTeams("1819-FIM-Q3"))
    matchDataRed.teams = [3668, 9999, 2333]
    matchDataRed.score = 300
    oprCalc.addMatch(matchDataRed)
  }
}

task toa_allevents () {
  group "FTC - Titainum Trojans"
  description "lists all fim events from TOA."
  doLast {
    def eventProcessor = new ToaEventProcessor(buildDir.toString())
    def toa = new ToaRestClient ()
    toa.getEvents().each {e ->
      if (e.event_key.contains ("FIM")) {
        println ("fetching ${e.event_key}")
        eventProcessor.process(e.event_key)
        sleep(6000)
      }
    }
  }
}

task toa_states () {
  group "FTC - Titainum Trojans"
  description "lists all fim events from TOA."
  doLast {
    def eventProcessor = new ToaEventProcessor(buildDir.toString())
    def toa = new ToaRestClient ()
    toa.getEvents().each {e ->
      if (e.event_key.contains ("1819-FIM-CMP")) {
        println ("fetching ${e.event_key}")
        eventProcessor.process(e.event_key)
        sleep(6000)
      }
    }
  }
}


task toa_listregions () {
  group "FTC - Titainum Trojans"
  description "lists all of the FTC regions in the TOA"
  doLast {
    def toa = new ToaRestClient()
    toa.getRegions().each {r ->
      r.each {k,v  ->
        print "$k:  $v".padRight(20)
      }
      println ""
    }
  }
}

task toa_listseasons () {
  group "FTC - Titainum Trojans"
  description "lists all of the FTC seasons in the TOA"
  doLast {
    def toa = new ToaRestClient()
    toa.getSeasons().each {s ->
      s.each {k,v  ->
        print ("$k:  $v".padRight(34))
      }
      println ""
    }
  }
}

task tba () {
  doLast {
    def tba = new TbaRestClient()
    println tba.getEvent("2018milan")
  }
}

task tba_event () {
  group "FRC - The TroBots"
  description "Pulls data for a single event from TBA."
  doLast {
    def tbaProcessor = new TbaEventProcessor(buildDir.toString())
    tbaProcessor.process("2018milan")
  }
}

task tba_allevents () {
  group "FRC - The TroBots"
  description "Pulls data for a all events for this season."
  doLast {
    def tbaProcessor = new TbaEventProcessor(buildDir.toString())
    def tba = new TbaRestClient()
    tba.getEvents("2018fim").each { event ->
      tbaProcessor.process(event.key)
    }
  }
}

task tba_listEvents () {
  group "FRC - The TroBots"
  description "Prints Event Keys for this season."
  doLast {
    def tba = new TbaRestClient()
    //println (tba.getDistricts())
    tba.getEvents("2019fim").each { event ->
      println (event.key)
    }
  }
}
